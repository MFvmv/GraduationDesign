<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hospital.mbg.mapper.DoctorsMapper">
  <resultMap id="BaseResultMap" type="com.hospital.mbg.model.Doctors">
    <id column="DoctorID" jdbcType="INTEGER" property="DoctorID" />
    <result column="Name" jdbcType="VARCHAR" property="Name" />
    <result column="Gender" jdbcType="CHAR" property="Gender" />
    <result column="Phone" jdbcType="VARCHAR" property="Phone" />
    <result column="Email" jdbcType="VARCHAR" property="Email" />
    <result column="Department" jdbcType="VARCHAR" property="Department" />
    <result column="Specialization" jdbcType="VARCHAR" property="Specialization" />
    <result column="CreatedAt" jdbcType="TIMESTAMP" property="CreatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    DoctorID, Name, Gender, Phone, Email, Department, Specialization, CreatedAt
  </sql>
  <select id="selectByExample" parameterType="com.hospital.mbg.model.DoctorsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doctors
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctors
    where DoctorID = #{DoctorID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from doctors
    where DoctorID = #{DoctorID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hospital.mbg.model.DoctorsExample">
    delete from doctors
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="DoctorID" parameterType="com.hospital.mbg.model.Doctors" useGeneratedKeys="true">
    insert into doctors (DoctorID, Name, Gender, 
      Phone, Email, Department, 
      Specialization, CreatedAt)
    values (#{DoctorID,jdbcType=INTEGER}, #{Name,jdbcType=VARCHAR}, #{Gender,jdbcType=CHAR}, 
      #{Phone,jdbcType=VARCHAR}, #{Email,jdbcType=VARCHAR}, #{Department,jdbcType=VARCHAR}, 
      #{Specialization,jdbcType=VARCHAR}, #{CreatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="DoctorID" parameterType="com.hospital.mbg.model.Doctors" useGeneratedKeys="true">
    insert into doctors
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="DoctorID != null">
        DoctorID,
      </if>
      <if test="Name != null">
        Name,
      </if>
      <if test="Gender != null">
        Gender,
      </if>
      <if test="Phone != null">
        Phone,
      </if>
      <if test="Email != null">
        Email,
      </if>
      <if test="Department != null">
        Department,
      </if>
      <if test="Specialization != null">
        Specialization,
      </if>
      <if test="CreatedAt != null">
        CreatedAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="DoctorID != null">
        #{DoctorID,jdbcType=INTEGER},
      </if>
      <if test="Name != null">
        #{Name,jdbcType=VARCHAR},
      </if>
      <if test="Gender != null">
        #{Gender,jdbcType=CHAR},
      </if>
      <if test="Phone != null">
        #{Phone,jdbcType=VARCHAR},
      </if>
      <if test="Email != null">
        #{Email,jdbcType=VARCHAR},
      </if>
      <if test="Department != null">
        #{Department,jdbcType=VARCHAR},
      </if>
      <if test="Specialization != null">
        #{Specialization,jdbcType=VARCHAR},
      </if>
      <if test="CreatedAt != null">
        #{CreatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hospital.mbg.model.DoctorsExample" resultType="java.lang.Long">
    select count(*) from doctors
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update doctors
    <set>
      <if test="row.DoctorID != null">
        DoctorID = #{row.DoctorID,jdbcType=INTEGER},
      </if>
      <if test="row.Name != null">
        Name = #{row.Name,jdbcType=VARCHAR},
      </if>
      <if test="row.Gender != null">
        Gender = #{row.Gender,jdbcType=CHAR},
      </if>
      <if test="row.Phone != null">
        Phone = #{row.Phone,jdbcType=VARCHAR},
      </if>
      <if test="row.Email != null">
        Email = #{row.Email,jdbcType=VARCHAR},
      </if>
      <if test="row.Department != null">
        Department = #{row.Department,jdbcType=VARCHAR},
      </if>
      <if test="row.Specialization != null">
        Specialization = #{row.Specialization,jdbcType=VARCHAR},
      </if>
      <if test="row.CreatedAt != null">
        CreatedAt = #{row.CreatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update doctors
    set DoctorID = #{row.DoctorID,jdbcType=INTEGER},
      Name = #{row.Name,jdbcType=VARCHAR},
      Gender = #{row.Gender,jdbcType=CHAR},
      Phone = #{row.Phone,jdbcType=VARCHAR},
      Email = #{row.Email,jdbcType=VARCHAR},
      Department = #{row.Department,jdbcType=VARCHAR},
      Specialization = #{row.Specialization,jdbcType=VARCHAR},
      CreatedAt = #{row.CreatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hospital.mbg.model.Doctors">
    update doctors
    <set>
      <if test="Name != null">
        Name = #{Name,jdbcType=VARCHAR},
      </if>
      <if test="Gender != null">
        Gender = #{Gender,jdbcType=CHAR},
      </if>
      <if test="Phone != null">
        Phone = #{Phone,jdbcType=VARCHAR},
      </if>
      <if test="Email != null">
        Email = #{Email,jdbcType=VARCHAR},
      </if>
      <if test="Department != null">
        Department = #{Department,jdbcType=VARCHAR},
      </if>
      <if test="Specialization != null">
        Specialization = #{Specialization,jdbcType=VARCHAR},
      </if>
      <if test="CreatedAt != null">
        CreatedAt = #{CreatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where DoctorID = #{DoctorID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hospital.mbg.model.Doctors">
    update doctors
    set Name = #{Name,jdbcType=VARCHAR},
      Gender = #{Gender,jdbcType=CHAR},
      Phone = #{Phone,jdbcType=VARCHAR},
      Email = #{Email,jdbcType=VARCHAR},
      Department = #{Department,jdbcType=VARCHAR},
      Specialization = #{Specialization,jdbcType=VARCHAR},
      CreatedAt = #{CreatedAt,jdbcType=TIMESTAMP}
    where DoctorID = #{DoctorID,jdbcType=INTEGER}
  </update>
</mapper>