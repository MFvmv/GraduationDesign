package ${package.ServiceImpl};
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Parent}.service.${table.serviceName};
import com.github.pagehelper.PageHelper;
import com.hospital.mbg.mapper.${entity}Mapper;
import com.hospital.mbg.model.${entity}Example;
import com.hospital.mbg.model.${entity};
import com.hospital.restful.utils.DynamicCriteriaUtil;
import com.hospital.restful.utils.ReflectionUtils;

import java.util.List;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * 该类依赖于 ${entity}Mapper 进行数据库操作，
 * 通过注入的方式获取该依赖。
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */

#set($lowerFirstChar = $entity.substring(0, 1).toLowerCase())
#set($remainingChars = $entity.substring(1))
#set($FirstWordLower = $lowerFirstChar + $remainingChars)


#set($idType = "Integer")
#foreach($item in $table.fields)
    #if($item.keyFlag)
        #set($idType = $item.columnType.toString().substring(0, 1).toUpperCase()+$item.columnType.toString().substring(1).toLowerCase())
    #end
#end

#set($orderStr="")
#foreach($entry in $orderMap.entrySet())
    #if($entry.key == $table.name)
        #set($orderStr=$entry.value)
    #end
#end

@Service
public class ${table.serviceImplName} implements  ${table.serviceName} {
    @Autowired
    private ${entity}Mapper ${FirstWordLower}Mapper;

    @Override
    public List<${entity}> list(Integer pageSize, Integer pageNum) {
        PageHelper.startPage(pageNum, pageSize);
        ${entity}Example ${FirstWordLower}Example = new ${entity}Example();
        //添加顺序
        #if($orderStr != "")
        ${FirstWordLower}Example.setOrderByClause("${orderStr}");
        #end
        // 执行查询
        List<${entity}> result =
        (List<${entity}>)
            ReflectionUtils.callIfExists(
                ${FirstWordLower}Mapper,new String[]{
                    "selectByExampleWithBLOBs",
                    "selectByExample"
                    },
                new Class<?>[]{${entity}Example.class},
                new Object[]{${FirstWordLower}Example}
            );
        return result;
    }

    @Override
    public List<${entity}> searchByField(String field,Object value,Integer pageSize, Integer pageNum) {
        PageHelper.startPage(pageNum, pageSize);
        ${entity}Example ${FirstWordLower}Example = new ${entity}Example();
        //添加顺序
        #if($orderStr != "")
        ${FirstWordLower}Example.setOrderByClause("${orderStr}");
        #end
        // 添加条件
        ${entity}Example.Criteria criteria = ${FirstWordLower}Example.createCriteria();
        #foreach($item in $table.fields)
            #set($itemName=$item.columnName.toString())
            #set($upperItemName=$itemName.substring(0, 1).toUpperCase()+$itemName.substring(1))
            criteria.when(field.equalsIgnoreCase("${upperItemName}"),c -> DynamicCriteriaUtil.invokeAndConvert(c,"and${upperItemName}EqualTo",value));
        #end
        // 执行查询
        List<${entity}> result =
        (List<${entity}>)
            ReflectionUtils.callIfExists(
                ${FirstWordLower}Mapper,new String[]{
                    "selectByExampleWithBLOBs",
                    "selectByExample"
                    },
                new Class<?>[]{${entity}Example.class},
                new Object[]{${FirstWordLower}Example}
            );
        return result;
    }

}

